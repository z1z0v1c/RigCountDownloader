using OfficeOpenXml;
using RigCountDownloader.Domain.Models;
using RigCountDownloader.Domain.Models.Enums;
using RigCountDownloader.Services.DataConverters;
using Xunit;

namespace RigCountDownloader.Tests.Services.DataConverters
{
	public class XlsxDataFormaterTests
	{
        [Fact]
        public void FormatDataAsync_CorrectMemoryStream_ReturnsCorrectResult()
        {
            // Arrange
            const string fileFormat = FileFormat.Xlsx;
            const string mediaType = MediaType.Spreadsheet;

            var memoryStreamBytes = new byte[]
            {
                80, 75, 3, 4, 20, 0, 6, 8, 8, 0, 116, 3, 148, 90, 228, 72, 173, 175, 24, 1, 0, 0, 51, 3, 0, 0, 19, 0, 20, 0, 91, 67, 111, 110, 116, 101, 110, 116, 95, 84, 121, 112, 101, 115, 93, 46, 120, 109, 108, 153, 153, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 181, 146, 207, 74, 3, 49, 16, 198, 95, 101, 201, 85, 154, 180, 30, 68, 164, 219, 30, 170, 30, 85, 176, 62, 192, 152, 204, 118, 67, 243, 143, 204, 180, 182, 111, 111, 54, 43, 34, 165, 130, 30, 122, 154, 36, 223, 204, 247, 253, 8, 51, 95, 30, 188, 107, 246, 152, 201, 198, 208, 138, 153, 156, 138, 6, 131, 142, 198, 134, 77, 43, 222, 214, 143, 147, 91, 209, 16, 67, 48, 224, 98, 192, 86, 28, 145, 196, 114, 49, 95, 31, 19, 82, 83, 102, 3, 181, 162, 103, 78, 119, 74, 145, 238, 209, 3, 201, 152, 48, 20, 165, 139, 217, 3, 151, 107, 222, 168, 4, 122, 11, 27, 84, 215, 211, 233, 141, 210, 49, 48, 6, 158, 240, 224, 33, 22, 243, 123, 236, 96, 231, 184, 89, 141, 239, 131, 117, 43, 32, 37, 103, 53, 112, 193, 82, 197, 76, 52, 15, 135, 34, 142, 148, 195, 93, 253, 97, 110, 31, 204, 9, 204, 228, 11, 68, 102, 116, 181, 135, 122, 155, 232, 234, 52, 160, 168, 52, 36, 60, 151, 143, 201, 214, 224, 191, 34, 98, 215, 89, 141, 38, 234, 157, 47, 35, 146, 82, 70, 48, 212, 35, 178, 119, 178, 86, 233, 193, 134, 49, 244, 5, 50, 63, 129, 47, 174, 234, 224, 212, 71, 204, 219, 247, 24, 183, 178, 106, 23, 1, 24, 34, 234, 249, 183, 252, 42, 146, 170, 101, 118, 65, 16, 226, 163, 67, 58, 71, 49, 42, 151, 140, 238, 33, 163, 121, 229, 92, 150, 252, 60, 193, 207, 134, 111, 16, 85, 151, 126, 241, 9, 80, 75, 3, 4, 20, 0, 6, 8, 8, 0, 118, 3, 148, 90, 152, 218, 235, 139, 174, 0, 0, 0, 39, 1, 0, 0, 11, 0, 20, 0, 95, 114, 101, 108, 115, 47, 46, 114, 101, 108, 115, 153, 153, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 207, 193, 14, 130, 48, 12, 6, 224, 87, 89, 122, 151, 129, 7, 99, 12, 131, 139, 49, 225, 106, 240, 1, 230, 86, 6, 1, 214, 101, 155, 10, 111, 239, 142, 98, 60, 120, 108, 250, 247, 251, 211, 178, 94, 230, 137, 61, 209, 135, 129, 172, 128, 34, 203, 129, 161, 85, 164, 7, 107, 4, 220, 218, 203, 238, 8, 44, 68, 105, 181, 156, 200, 162, 128, 21, 3, 212, 85, 121, 197, 73, 198, 116, 18, 250, 193, 5, 150, 12, 27, 4, 244, 49, 186, 19, 231, 65, 245, 56, 203, 144, 145, 67, 155, 54, 29, 249, 89, 198, 52, 122, 195, 157, 84, 163, 52, 200, 247, 121, 126, 224, 254, 211, 128, 173, 201, 26, 45, 192, 55, 186, 0, 214, 174, 14, 255, 177, 169, 235, 6, 133, 103, 82, 143, 25, 109, 252, 81, 241, 149, 72, 178, 244, 6, 163, 128, 101, 226, 47, 242, 227, 157, 104, 204, 18, 10, 188, 42, 249, 230, 193, 234, 13, 80, 75, 3, 4, 20, 0, 6, 8, 8, 0, 118, 3, 148, 90, 110, 155, 55, 12, 213, 0, 0, 0, 81, 1, 0, 0, 15, 0, 20, 0, 120, 108, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 153, 153, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 79, 189, 78, 196, 48, 12, 126, 149, 200, 59, 151, 194, 128, 80, 213, 246, 6, 88, 78, 66, 2, 9, 137, 61, 164, 206, 53, 186, 196, 174, 156, 148, 227, 221, 24, 120, 36, 94, 129, 228, 170, 10, 70, 38, 127, 246, 247, 99, 251, 251, 243, 171, 219, 127, 196, 160, 222, 81, 146, 103, 234, 225, 122, 215, 128, 66, 178, 60, 122, 58, 246, 176, 100, 119, 117, 7, 251, 161, 59, 179, 156, 222, 152, 79, 170, 168, 41, 181, 210, 195, 148, 243, 220, 106, 157, 236, 132, 209, 164, 29, 207, 72, 133, 115, 44, 209, 228, 210, 202, 81, 179, 115, 222, 226, 3, 219, 37, 34, 101, 125, 211, 52, 183, 90, 48, 152, 92, 54, 165, 201, 207, 9, 214, 180, 255, 100, 165, 89, 208, 140, 105, 66, 204, 49, 172, 81, 209, 120, 130, 161, 171, 87, 189, 122, 60, 167, 223, 35, 107, 171, 244, 208, 233, 63, 220, 197, 186, 85, 69, 38, 98, 15, 47, 21, 131, 186, 140, 14, 99, 121, 30, 148, 180, 190, 0, 57, 140, 5, 215, 132, 205, 102, 77, 176, 207, 162, 220, 18, 194, 125, 129, 79, 244, 200, 102, 117, 84, 213, 182, 120, 248, 1, 80, 75, 3, 4, 20, 0, 6, 8, 8, 0, 120, 3, 148, 90, 129, 98, 146, 162, 214, 0, 0, 0, 52, 2, 0, 0, 26, 0, 20, 0, 120, 108, 47, 95, 114, 101, 108, 115, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 46, 114, 101, 108, 115, 153, 153, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 173, 145, 207, 106, 195, 48, 12, 135, 95, 197, 232, 190, 56, 233, 96, 140, 81, 183, 151, 49, 232, 181, 127, 30, 64, 216, 74, 28, 154, 216, 198, 210, 218, 229, 237, 107, 54, 86, 82, 40, 99, 135, 158, 132, 100, 244, 253, 62, 172, 229, 250, 107, 28, 212, 137, 50, 247, 49, 24, 104, 170, 26, 20, 5, 27, 93, 31, 58, 3, 135, 253, 199, 211, 43, 40, 22, 12, 14, 135, 24, 200, 192, 68, 12, 235, 213, 114, 75, 3, 74, 89, 97, 223, 39, 86, 133, 17, 216, 128, 23, 73, 111, 90, 179, 245, 52, 34, 87, 49, 81, 40, 47, 109, 204, 35, 74, 105, 115, 167, 19, 218, 35, 118, 164, 23, 117, 253, 162, 243, 156, 1, 183, 76, 181, 113, 6, 242, 198, 53, 160, 246, 83, 162, 255, 176, 99, 219, 246, 150, 222, 163, 253, 28, 41, 200, 157, 8, 125, 142, 249, 200, 158, 72, 10, 20, 115, 71, 98, 224, 58, 98, 253, 93, 154, 170, 80, 65, 223, 151, 89, 60, 82, 134, 101, 26, 202, 95, 94, 77, 126, 250, 191, 226, 159, 31, 26, 239, 49, 147, 219, 73, 46, 135, 158, 91, 204, 199, 191, 50, 250, 230, 218, 171, 11, 80, 75, 3, 4, 20, 0, 6, 8, 8, 0, 121, 3, 148, 90, 102, 220, 38, 79, 19, 1, 0, 0, 9, 2, 0, 0, 24, 0, 20, 0, 120, 108, 47, 119, 111, 114, 107, 115, 104, 101, 101, 116, 115, 47, 115, 104, 101, 101, 116, 49, 46, 120, 109, 108, 153, 153, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 81, 205, 106, 132, 48, 16, 126, 149, 144, 123, 55, 254, 208, 82, 36, 186, 8, 203, 178, 189, 149, 30, 122, 79, 227, 168, 97, 53, 35, 73, 212, 190, 91, 15, 125, 164, 190, 66, 71, 23, 236, 194, 22, 218, 67, 96, 38, 249, 254, 102, 242, 245, 241, 41, 247, 239, 125, 199, 38, 112, 222, 160, 205, 121, 188, 139, 56, 3, 171, 177, 50, 182, 201, 249, 24, 234, 187, 71, 190, 47, 228, 140, 238, 236, 91, 128, 192, 8, 110, 125, 230, 114, 222, 134, 48, 100, 66, 120, 221, 66, 175, 252, 14, 7, 176, 244, 86, 163, 235, 85, 160, 214, 53, 2, 235, 218, 104, 56, 160, 30, 123, 176, 65, 36, 81, 244, 32, 28, 116, 42, 144, 149, 111, 205, 224, 249, 69, 237, 63, 90, 126, 112, 160, 170, 53, 66, 223, 93, 164, 122, 101, 44, 47, 100, 101, 72, 125, 73, 207, 28, 212, 57, 47, 227, 172, 76, 57, 19, 133, 92, 193, 175, 6, 102, 127, 85, 179, 101, 146, 55, 196, 243, 210, 60, 85, 57, 143, 86, 172, 184, 1, 31, 87, 243, 103, 199, 42, 168, 213, 216, 133, 23, 156, 79, 96, 154, 54, 208, 146, 238, 127, 244, 15, 42, 168, 66, 58, 156, 25, 173, 36, 166, 56, 122, 41, 202, 152, 51, 191, 106, 19, 220, 211, 237, 84, 68, 82, 76, 228, 163, 233, 16, 122, 163, 36, 27, 37, 185, 161, 196, 191, 83, 210, 141, 146, 254, 73, 17, 87, 33, 91, 90, 32, 184, 35, 98, 0, 183, 206, 188, 125, 106, 241, 13, 80, 75, 3, 4, 20, 0, 6, 8, 8, 0, 122, 3, 148, 90, 238, 91, 91, 186, 67, 1, 0, 0, 170, 2, 0, 0, 13, 0, 20, 0, 120, 108, 47, 115, 116, 121, 108, 101, 115, 46, 120, 109, 108, 153, 153, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 146, 193, 78, 195, 48, 12, 134, 95, 37, 202, 157, 101, 157, 4, 66, 168, 237, 14, 147, 38, 113, 225, 50, 14, 92, 211, 54, 105, 35, 37, 78, 149, 184, 83, 199, 171, 113, 224, 145, 120, 5, 146, 180, 108, 221, 132, 4, 39, 59, 127, 253, 127, 78, 29, 127, 125, 124, 230, 219, 209, 104, 114, 20, 206, 43, 11, 5, 205, 86, 107, 74, 4, 212, 182, 81, 208, 22, 116, 64, 121, 247, 72, 183, 101, 238, 241, 164, 197, 161, 19, 2, 73, 168, 7, 95, 208, 14, 177, 127, 98, 204, 215, 157, 48, 220, 175, 108, 47, 32, 124, 145, 214, 25, 142, 225, 232, 90, 230, 123, 39, 120, 227, 163, 201, 104, 182, 89, 175, 31, 152, 225, 10, 104, 153, 195, 96, 246, 6, 61, 169, 237, 0, 88, 208, 208, 146, 149, 185, 180, 112, 145, 50, 58, 9, 161, 243, 59, 57, 114, 29, 148, 44, 85, 1, 55, 98, 18, 118, 92, 171, 202, 169, 164, 178, 169, 54, 5, 31, 156, 74, 235, 51, 106, 67, 39, 161, 204, 123, 142, 40, 28, 236, 195, 129, 204, 249, 235, 169, 23, 5, 5, 11, 98, 230, 164, 194, 63, 202, 91, 199, 79, 217, 230, 126, 233, 72, 33, 116, 174, 172, 107, 194, 44, 151, 191, 49, 73, 101, 174, 133, 196, 232, 112, 170, 237, 82, 130, 182, 143, 161, 178, 136, 214, 196, 172, 81, 188, 181, 192, 117, 226, 254, 216, 230, 36, 176, 107, 161, 245, 33, 190, 195, 155, 188, 106, 48, 74, 50, 13, 244, 185, 73, 179, 140, 67, 152, 211, 8, 90, 218, 38, 200, 255, 253, 163, 188, 1, 157, 25, 137, 120, 133, 57, 171, 36, 190, 81, 65, 95, 226, 42, 232, 5, 163, 26, 148, 70, 5, 191, 93, 45, 64, 155, 81, 222, 44, 4, 187, 44, 93, 249, 13, 80, 75, 3, 4, 20, 0, 6, 8, 8, 0, 124, 3, 148, 90, 245, 178, 204, 41, 162, 0, 0, 0, 204, 0, 0, 0, 20, 0, 20, 0, 120, 108, 47, 115, 104, 97, 114, 101, 100, 83, 116, 114, 105, 110, 103, 115, 46, 120, 109, 108, 153, 153, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 142, 77, 10, 194, 48, 16, 133, 175, 18, 102, 111, 83, 93, 136, 72, 18, 17, 209, 19, 232, 1, 66, 59, 182, 129, 102, 82, 51, 83, 209, 179, 185, 240, 72, 94, 193, 136, 136, 203, 247, 61, 222, 207, 235, 241, 52, 155, 91, 28, 212, 21, 51, 135, 68, 22, 230, 85, 13, 10, 169, 73, 109, 160, 206, 194, 233, 120, 152, 173, 64, 177, 120, 106, 253, 144, 8, 45, 220, 145, 65, 109, 156, 97, 22, 85, 162, 196, 22, 122, 145, 113, 173, 53, 55, 61, 70, 207, 85, 26, 145, 138, 115, 78, 57, 122, 41, 50, 119, 154, 199, 140, 190, 229, 30, 81, 226, 160, 23, 117, 189, 212, 209, 7, 2, 213, 164, 137, 196, 194, 2, 212, 68, 225, 50, 225, 238, 167, 203, 64, 112, 70, 220, 126, 202, 165, 207, 104, 113, 70, 127, 200, 151, 110, 175, 93, 245, 103, 186, 124, 113, 111, 80, 75, 1, 2, 45, 0, 20, 0, 6, 8, 8, 0, 125, 3, 148, 90, 228, 72, 173, 175, 24, 1, 0, 0, 51, 3, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 67, 111, 110, 116, 101, 110, 116, 95, 84, 121, 112, 101, 115, 93, 46, 120, 109, 108, 80, 75, 1, 2, 45, 0, 20, 0, 6, 8, 8, 0, 125, 3, 148, 90, 152, 218, 235, 139, 174, 0, 0, 0, 39, 1, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93, 1, 0, 0, 95, 114, 101, 108, 115, 47, 46, 114, 101, 108, 115, 80, 75, 1, 2, 45, 0, 20, 0, 6, 8, 8, 0, 125, 3, 148, 90, 110, 155, 55, 12, 213, 0, 0, 0, 81, 1, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 2, 0, 0, 120, 108, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 80, 75, 1, 2, 45, 0, 20, 0, 6, 8, 8, 0, 128, 3, 148, 90, 129, 98, 146, 162, 214, 0, 0, 0, 52, 2, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 3, 0, 0, 120, 108, 47, 95, 114, 101, 108, 115, 47, 119, 111, 114, 107, 98, 111, 111, 107, 46, 120, 109, 108, 46, 114, 101, 108, 115, 80, 75, 1, 2, 45, 0, 20, 0, 6, 8, 8, 0, 128, 3, 148, 90, 102, 220, 38, 79, 19, 1, 0, 0, 9, 2, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 4, 0, 0, 120, 108, 47, 119, 111, 114, 107, 115, 104, 101, 101, 116, 115, 47, 115, 104, 101, 101, 116, 49, 46, 120, 109, 108, 80, 75, 1, 2, 45, 0, 20, 0, 6, 8, 8, 0, 128, 3, 148, 90, 238, 91, 91, 186, 67, 1, 0, 0, 170, 2, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 221, 5, 0, 0, 120, 108, 47, 115, 116, 121, 108, 101, 115, 46, 120, 109, 108, 80, 75, 1, 2, 45, 0, 20, 0, 6, 8, 8, 0, 129, 3, 148, 90, 245, 178, 204, 41, 162, 0, 0, 0, 204, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 95, 7, 0, 0, 120, 108, 47, 115, 104, 97, 114, 101, 100, 83, 116, 114, 105, 110, 103, 115, 46, 120, 109, 108, 80, 75, 5, 6, 0, 0, 0, 0, 7, 0, 7, 0, 194, 1, 0, 0, 71, 8, 0, 0, 0, 0
            };

            using var memoryStream = new MemoryStream(memoryStreamBytes);

            var data = new DataStream(mediaType, memoryStream);
            var expectedPackage = new ExcelPackage(memoryStream);

            var xlsxDataConverter = new XlsxDataFormater();

            // Act
            var convertedData = (FormatedData)xlsxDataConverter.FormatData(data);
            var convertedPackage = (ExcelPackage)convertedData.Data;

            // Assert
            Assert.Equal(fileFormat, convertedData.FileFormat);
            Assert.Equal(expectedPackage.GetAsByteArray(), convertedPackage.GetAsByteArray());

            // _dataProcessorFactory.Received(1).CreateDataProcessor(data);
            // await _dataProcessor.Received(1).ProcessAndSaveAsync();
        }
    }
}
